==12237== Memcheck, a memory error detector
==12237== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==12237== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==12237== Command: ./pa10
==12237== Parent PID: 21382
==12237== 
--12237-- 
--12237-- Valgrind options:
--12237--    --tool=memcheck
--12237--    --leak-check=full
--12237--    --verbose
--12237--    --log-file=memcheck.log
--12237-- Contents of /proc/version:
--12237--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--12237-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--12237-- Page sizes: currently 4096, max supported 4096
--12237-- Valgrind library directory: /usr/lib64/valgrind
--12237-- Reading syms from /home/shay/b/smit1988/ECE264/Solutions/PA01/PA10/pa10
--12237-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--12237--    object doesn't have a dynamic symbol table
--12237-- Reading syms from /lib64/ld-2.12.so
--12237--   Considering /usr/lib/debug/.build-id/3b/fa45bce0e82e1d90d37a0cc8630f97f2003bf5.debug ..
--12237--   .. build-id is valid
--12237-- Scheduler: using generic scheduler lock implementation.
--12237-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==12237== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-12237-by-smit1988-on-ecegrid-thin1.ecn.purdue.edu
==12237== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-12237-by-smit1988-on-ecegrid-thin1.ecn.purdue.edu
==12237== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-12237-by-smit1988-on-ecegrid-thin1.ecn.purdue.edu
==12237== 
==12237== TO CONTROL THIS PROCESS USING vgdb (which you probably
==12237== don't want to do, unless you know exactly what you're doing,
==12237== or are doing some strange experiment):
==12237==   /usr/lib64/valgrind/../../bin/vgdb --pid=12237 ...command...
==12237== 
==12237== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==12237==   /path/to/gdb ./pa10
==12237== and then give GDB the following command
==12237==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=12237
==12237== --pid is optional if only one valgrind process is running
==12237== 
--12237-- REDIR: 0x35ff417610 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--12237-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--12237-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--12237-- REDIR: 0x35ff417480 (index) redirected to 0x4a07c30 (index)
--12237-- REDIR: 0x35ff417500 (strcmp) redirected to 0x4a08570 (strcmp)
--12237-- Reading syms from /lib64/libc-2.12.so
--12237--   Considering /usr/lib/debug/.build-id/73/3ad3a438b5a695f7a63a77413f9b2c8c94e8e6.debug ..
--12237--   .. build-id is valid
--12237-- REDIR: 0x35ff884cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--12237-- REDIR: 0x35ff886f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--12237-- REDIR: 0x35ff882c40 (__GI_strrchr) redirected to 0x4a07ab0 (__GI_strrchr)
--12237-- REDIR: 0x35ff87a640 (malloc) redirected to 0x4a069ac (malloc)
--12237-- REDIR: 0x35ff87b520 (free) redirected to 0x4a063a9 (free)
--12237-- REDIR: 0x35ff87ba10 (realloc) redirected to 0x4a06b57 (realloc)
--12237-- REDIR: 0x35ff881160 (__GI_strlen) redirected to 0x4a07fb0 (__GI_strlen)
--12237-- REDIR: 0x35ff889670 (memcpy) redirected to 0x4a08b60 (memcpy)
--12237-- REDIR: 0x35ff92b4c0 (__strcasecmp_sse42) redirected to 0x4a0aae0 (strcasecmp)
==12237== 
==12237== HEAP SUMMARY:
==12237==     in use at exit: 3,919,824 bytes in 11,023 blocks
==12237==   total heap usage: 2,435,322 allocs, 2,424,299 frees, 5,030,286,840 bytes allocated
==12237== 
==12237== Searching for pointers to 11,023 not-freed blocks
==12237== Checked 64,568 bytes
==12237== 
==12237== 656 bytes in 41 blocks are definitely lost in loss record 1 of 3
==12237==    at 0x4A06A2E: malloc (vg_replace_malloc.c:270)
==12237==    by 0x4A06BA2: realloc (vg_replace_malloc.c:662)
==12237==    by 0x400BC2: create_business_bst (answer10.c:194)
==12237==    by 0x400EAA: main (answer10.c:280)
==12237== 
==12237== 3,919,168 (3,512,880 direct, 406,288 indirect) bytes in 10,577 blocks are definitely lost in loss record 3 of 3
==12237==    at 0x4A06C20: realloc (vg_replace_malloc.c:662)
==12237==    by 0x400BC2: create_business_bst (answer10.c:194)
==12237==    by 0x400EAA: main (answer10.c:280)
==12237== 
==12237== LEAK SUMMARY:
==12237==    definitely lost: 3,513,536 bytes in 10,618 blocks
==12237==    indirectly lost: 406,288 bytes in 405 blocks
==12237==      possibly lost: 0 bytes in 0 blocks
==12237==    still reachable: 0 bytes in 0 blocks
==12237==         suppressed: 0 bytes in 0 blocks
==12237== 
==12237== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 6 from 6)
--12237-- 
--12237-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--12237-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==12237== 
==12237== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 6 from 6)
