==17171== Memcheck, a memory error detector
==17171== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==17171== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==17171== Command: ./a.out images/corrupt-testcases/05-big-width-height.ee264 student-out-19_-
==17171== Parent PID: 17169
==17171== 
--17171-- 
--17171-- Valgrind options:
--17171--    --tool=memcheck
--17171--    --leak-check=full
--17171--    --verbose
--17171--    --log-file=memcheck-19.log
--17171-- Contents of /proc/version:
--17171--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--17171-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--17171-- Page sizes: currently 4096, max supported 4096
--17171-- Valgrind library directory: /usr/lib64/valgrind
--17171-- Reading syms from /tmp/.ygMSKp/a.out
--17171-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--17171--    object doesn't have a dynamic symbol table
--17171-- Reading syms from /lib64/ld-2.12.so
--17171--   Considering /usr/lib/debug/.build-id/3b/fa45bce0e82e1d90d37a0cc8630f97f2003bf5.debug ..
--17171--   .. build-id is valid
--17171-- Scheduler: using generic scheduler lock implementation.
--17171-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==17171== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-17171-by-smit1988-on-ecegrid-thin1.ecn.purdue.edu
==17171== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-17171-by-smit1988-on-ecegrid-thin1.ecn.purdue.edu
==17171== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-17171-by-smit1988-on-ecegrid-thin1.ecn.purdue.edu
==17171== 
==17171== TO CONTROL THIS PROCESS USING vgdb (which you probably
==17171== don't want to do, unless you know exactly what you're doing,
==17171== or are doing some strange experiment):
==17171==   /usr/lib64/valgrind/../../bin/vgdb --pid=17171 ...command...
==17171== 
==17171== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==17171==   /path/to/gdb ./a.out
==17171== and then give GDB the following command
==17171==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=17171
==17171== --pid is optional if only one valgrind process is running
==17171== 
--17171-- REDIR: 0x35ff417610 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--17171-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--17171-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--17171-- REDIR: 0x35ff417480 (index) redirected to 0x4a07c30 (index)
--17171-- REDIR: 0x35ff417500 (strcmp) redirected to 0x4a08570 (strcmp)
--17171-- Reading syms from /lib64/libc-2.12.so
--17171--   Considering /usr/lib/debug/.build-id/73/3ad3a438b5a695f7a63a77413f9b2c8c94e8e6.debug ..
--17171--   .. build-id is valid
--17171-- REDIR: 0x35ff884cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--17171-- REDIR: 0x35ff886f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--17171-- REDIR: 0x35ff882c40 (__GI_strrchr) redirected to 0x4a07ab0 (__GI_strrchr)
--17171-- REDIR: 0x35ff87f6e0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--17171-- REDIR: 0x35ff928420 (__strcmp_sse42) redirected to 0x4a084d0 (strcmp)
--17171-- REDIR: 0x35ff881120 (strlen) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--17171-- REDIR: 0x35ff9336f0 (__strlen_sse42) redirected to 0x4a07f90 (strlen)
--17171-- REDIR: 0x35ff88aaf0 (strchrnul) redirected to 0x4a09fb0 (strchrnul)
--17171-- REDIR: 0x35ff884500 (mempcpy) redirected to 0x4a0a020 (mempcpy)
--17171-- REDIR: 0x35ff87b520 (free) redirected to 0x4a063a9 (free)
--17171-- REDIR: 0x35ff87a640 (malloc) redirected to 0x4a069ac (malloc)
--17171-- REDIR: 0x35ff889670 (memcpy) redirected to 0x4a08b60 (memcpy)
==17171== 
==17171== HEAP SUMMARY:
==17171==     in use at exit: 592 bytes in 2 blocks
==17171==   total heap usage: 2 allocs, 0 frees, 592 bytes allocated
==17171== 
==17171== Searching for pointers to 2 not-freed blocks
==17171== Checked 69,008 bytes
==17171== 
==17171== 24 bytes in 1 blocks are definitely lost in loss record 1 of 2
==17171==    at 0x4A06A2E: malloc (vg_replace_malloc.c:270)
==17171==    by 0x4009F8: Image_load (answer07.c:48)
==17171==    by 0x401B7C: main (<stdin>:61)
==17171== 
==17171== LEAK SUMMARY:
==17171==    definitely lost: 24 bytes in 1 blocks
==17171==    indirectly lost: 0 bytes in 0 blocks
==17171==      possibly lost: 0 bytes in 0 blocks
==17171==    still reachable: 568 bytes in 1 blocks
==17171==         suppressed: 0 bytes in 0 blocks
==17171== Reachable blocks (those to which a pointer was found) are not shown.
==17171== To see them, rerun with: --leak-check=full --show-reachable=yes
==17171== 
==17171== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 6 from 6)
--17171-- 
--17171-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--17171-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==17171== 
==17171== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 6 from 6)
