==16322== Memcheck, a memory error detector
==16322== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==16322== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==16322== Command: ./pa08
==16322== Parent PID: 15860
==16322== 
--16322-- 
--16322-- Valgrind options:
--16322--    --tool=memcheck
--16322--    --leak-check=full
--16322--    --verbose
--16322--    --log-file=memcheck.log
--16322-- Contents of /proc/version:
--16322--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--16322-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--16322-- Page sizes: currently 4096, max supported 4096
--16322-- Valgrind library directory: /usr/lib64/valgrind
--16322-- Reading syms from /home/shay/b/smit1988/ECE264/Solutions/PA01/PA08/pa08
--16322-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--16322--    object doesn't have a dynamic symbol table
--16322-- Reading syms from /lib64/ld-2.12.so
--16322--   Considering /usr/lib/debug/.build-id/3b/fa45bce0e82e1d90d37a0cc8630f97f2003bf5.debug ..
--16322--   .. build-id is valid
--16322-- Scheduler: using generic scheduler lock implementation.
--16322-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==16322== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-16322-by-smit1988-on-ecegrid-thin1.ecn.purdue.edu
==16322== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-16322-by-smit1988-on-ecegrid-thin1.ecn.purdue.edu
==16322== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-16322-by-smit1988-on-ecegrid-thin1.ecn.purdue.edu
==16322== 
==16322== TO CONTROL THIS PROCESS USING vgdb (which you probably
==16322== don't want to do, unless you know exactly what you're doing,
==16322== or are doing some strange experiment):
==16322==   /usr/lib64/valgrind/../../bin/vgdb --pid=16322 ...command...
==16322== 
==16322== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==16322==   /path/to/gdb ./pa08
==16322== and then give GDB the following command
==16322==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=16322
==16322== --pid is optional if only one valgrind process is running
==16322== 
--16322-- REDIR: 0x35ff417610 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--16322-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--16322-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--16322-- REDIR: 0x35ff417480 (index) redirected to 0x4a07c30 (index)
--16322-- REDIR: 0x35ff417500 (strcmp) redirected to 0x4a08570 (strcmp)
--16322-- Reading syms from /lib64/libc-2.12.so
--16322--   Considering /usr/lib/debug/.build-id/73/3ad3a438b5a695f7a63a77413f9b2c8c94e8e6.debug ..
--16322--   .. build-id is valid
--16322-- REDIR: 0x35ff884cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--16322-- REDIR: 0x35ff886f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--16322-- REDIR: 0x35ff882c40 (__GI_strrchr) redirected to 0x4a07ab0 (__GI_strrchr)
--16322-- REDIR: 0x35ff87a640 (malloc) redirected to 0x4a069ac (malloc)
--16322-- REDIR: 0x35ff88aaf0 (strchrnul) redirected to 0x4a09fb0 (strchrnul)
==16322== Invalid read of size 1
==16322==    at 0x35FF847E2C: vfprintf (vfprintf.c:1641)
==16322==    by 0x35FF84F189: printf (printf.c:35)
==16322==    by 0x4005C5: List_print (answer08testing.c:15)
==16322==    by 0x40063A: main (answer08testing.c:31)
==16322==  Address 0x4c3b092 is 0 bytes after a block of size 2 alloc'd
==16322==    at 0x4A06A2E: malloc (vg_replace_malloc.c:270)
==16322==    by 0x40060C: main (answer08testing.c:27)
==16322== 
--16322-- REDIR: 0x35ff87b520 (free) redirected to 0x4a063a9 (free)
==16322== Conditional jump or move depends on uninitialised value(s)
==16322==    at 0x4005D7: List_print (answer08testing.c:14)
==16322==    by 0x40063A: main (answer08testing.c:31)
==16322== 
--16322-- REDIR: 0x35ff881160 (__GI_strlen) redirected to 0x4a07fb0 (__GI_strlen)
==16322== 
==16322== HEAP SUMMARY:
==16322==     in use at exit: 0 bytes in 0 blocks
==16322==   total heap usage: 2 allocs, 2 frees, 18 bytes allocated
==16322== 
==16322== All heap blocks were freed -- no leaks are possible
==16322== 
==16322== Use --track-origins=yes to see where uninitialised values come from
==16322== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 6 from 6)
==16322== 
==16322== 1 errors in context 1 of 2:
==16322== Conditional jump or move depends on uninitialised value(s)
==16322==    at 0x4005D7: List_print (answer08testing.c:14)
==16322==    by 0x40063A: main (answer08testing.c:31)
==16322== 
==16322== 
==16322== 1 errors in context 2 of 2:
==16322== Invalid read of size 1
==16322==    at 0x35FF847E2C: vfprintf (vfprintf.c:1641)
==16322==    by 0x35FF84F189: printf (printf.c:35)
==16322==    by 0x4005C5: List_print (answer08testing.c:15)
==16322==    by 0x40063A: main (answer08testing.c:31)
==16322==  Address 0x4c3b092 is 0 bytes after a block of size 2 alloc'd
==16322==    at 0x4A06A2E: malloc (vg_replace_malloc.c:270)
==16322==    by 0x40060C: main (answer08testing.c:27)
==16322== 
--16322-- 
--16322-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--16322-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==16322== 
==16322== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 6 from 6)
